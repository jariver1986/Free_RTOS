const char *p_task_gate_b_wait_entry_b	= "  ==> Task Gate B - Wait:   Entry_B";
const char *p_task_gate_b_wait_exit_b	= "  ==> Task Gate B - Wait:   Exit_B";

const char *p_task_gate_b_wait_mutex	= "  ==> Task Gate B - Wait:   Mutex";
const char *p_task_gate_b_signal_mutex	= "  ==> Task Gate B - Signal: Mutex    ==>";

	xSemaphoreTake(h_entry_b_bin_sem, (portTickType) 0);
	xSemaphoreTake(h_exit_b_bin_sem, (portTickType) 0);

		/* Print out: Wait Gate B */
		LOGGER_LOG("  %s\r\n", p_task_gate_b_wait_entry_b);
		xSemaphoreTake(h_entry_b_bin_sem, portMAX_DELAY);

		/* Print out: Wait Exit B */
		LOGGER_LOG("  %s\r\n", p_task_gate_b_wait_exit_b);
		xSemaphoreTake(h_exit_b_bin_sem, portMAX_DELAY);

		/* Print out: Wait Mutex */
		LOGGER_LOG("  %s\r\n", p_task_gate_b_wait_mutex);
		xSemaphoreTake(h_mutex_mut_sem, portMAX_DELAY);

		/* Print out: Signal Mutex */
		LOGGER_LOG("  %s\r\n", p_task_gate_b_signal_mutex);
		xSemaphoreGive(h_mutex_mut_sem);
